name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox

      - name: Run tests
        run: tox

      - name: Run static code analysis
        run: |
          python -m pip install flake8
          flake8

      - name: Generate docs
        run: |
          tox -e docs

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: python -m pip install --upgrade pip setuptools wheel twine

      - name: Build and upload package to PyPI
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            This is a stable release
          draft: false
          prerelease: false

      - name: Build and deploy documentation
        uses: jamesgeorge007/github-pages-deploy-action@4.1.4
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: docs/_build/html

#  pr_template:
#    runs-on: ubuntu-latest
#    if: github.event_name == 'pull_request'
#    env:
#      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up Python 3.9
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.9
#
#      - name: Install dependencies
#        run: python -m pip install --upgrade pip cookiecutter
#
#      - name: Generate pull request template
#        run: |
#          cookiecutter gh:techdecaf/pull-request-template
#          git add .github/PULL_REQUEST_TEMPLATE.md
#          git config --local user.email "action@github.com"
#          git config --local user.name "GitHub Action"
#          git commit -m "Add pull request template"
#          git push
